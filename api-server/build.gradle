plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'

	id "com.diffplug.spotless" version '6.8.0'
}

group = 'com.krafton'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

spotless {
	java {
		removeUnusedImports()
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// db
	runtimeOnly 'com.h2database:h2'	// 테스트용
	runtimeOnly 'com.mysql:mysql-connector-j'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Swagger(Spring 3.x.x 이상부터 SpringFox 대신, SpringDoc)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.22.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
